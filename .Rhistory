cal_relative_risk(birth,col)
cal_relative_risk(birth,smoke)
cal_relative_risk <- function(df,col){
values <- df %>%
group_by(df$col,low) %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,smoke)
cal_relative_risk <- function(df,col){
values <- df %>%
group_by(col,low) %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk <- function(df,col){
values <- df %>%
group_by(smoke,low) %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,smll)
cal_relative_risk <- function(df,col){
values <- df %>%
group_by(col,low) %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,smoke)
cal_relative_risk <- function(df,col){
values <- df %>%
group_by((col),low) %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,smoke)
cal_relative_risk <- function(df,col){
values <- df %>%
group_by_(col,low) %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,"smoke")
cal_relative_risk <- function(df,col){
values <- df %>%
group_by_(col,"low") %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,"smoke")
table(birth$ptl)
table(birth$ftv)
table(birth$ftv <0)
table(birth$ftv <1)
birth <- birth %>%
mutate(ftv_yes = ftv == 0)
birth <- birth %>%
mutate(ftv_yes = ftv == 0)
birth <- birth %>%
mutate(ftv_yes = (ftv == 0))
birth <- birth %>%
mutate(ftv_yes = (ftv == 0))
library("HSAUR")
library("MASS")
library(dplyr)
library(ggplot2)
library(patchwork)
library(epitools)
library(Epi)
data(bdendo)
bcg <- BCG
bcg <- bcg %>%
mutate(odds_tb = bcg$BCGTB/(bcg$BCGVacc - bcg$BCGTB)) %>%
mutate(odds_no_tb = bcg$NoVaccTB/(bcg$NoVacc-bcg$NoVaccTB)) %>%
mutate(odds_ratio = odds_tb/ odds_no_tb)
# plots ratio vs year
ratio_vs_year <- ggplot(data=bcg, aes(x=Year, y=odds_ratio)) +
geom_line()+
geom_point()+
ggtitle("Odds Ratio vs Year")
#plots ratio vs latitude
ratio_vs_latitude <-ggplot(data=bcg, aes(x=Latitude, y=odds_ratio)) +
geom_line()+
geom_point() +
ggtitle("Odds Ratio vs Latitude")
bcg <- bcg %>%
mutate(risk_tb = bcg$BCGTB/bcg$BCGVacc) %>%
mutate(risk_no_tb = bcg$NoVaccTB/bcg$NoVacc) %>%
mutate(relative_risk = risk_tb/risk_no_tb)
#make scatterplot
justwork <- ggplot(data=bcg, aes(x=Year)) +
scale_color_manual(name = "Legend",
values = c("Relative Risk" = "blue",
"Odds Risk" = "red")) +
geom_point(aes(y=odds_ratio, color = "Relative Risk")) +
geom_point(aes(y=relative_risk, color = "Odds Risk")) +
ggtitle("Relative Risk vs Odds Ratio")
birth <-birthwt
#100 = yes  #89 = no
birth <- birth %>%
mutate(ftv_yes = (ftv == 0))
birth <- birth %>%
mutate(ftv_yes = as.numeric(ftv == 0))
birth <- birth %>%
mutate(age_yes = as.numeric(age == 0))
birth <- birth %>%
mutate(age_yes = as.numeric(age <20))
cal_relative_risk(birth,"ftv_yes")
cal_relative_risk <- function(df,col){
values <- df %>%
group_by_(col,"low") %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,"ftv_yes")
cal_relative_risk(birth,"age_yes")
cal_relative_risk(birth,"ftv_yes")
rr <- data.frame() %>%
mutate( smoke_risk = cal_relative_risk(birth,"smoke")) %>%
mutate( hypertension_risk = cal_relative_risk(birth,"ht")) %>%
mutate( ftv_risk = cal_relative_risk(birth,"ftv_yes")) %>%
mutate( age_risk = cal_relative_risk(birth,"age_yes"))
View(rr)
View(rr)
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"),
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = names(vec),
value = unname(vec)
)
View(rr)
View(rr)
knitr::opts_chunk$set(echo = TRUE)
source("analysis.R")
source("analysis.R")
knitr::kable(rr, col.names = c("Type","Risk Ratio"))
epitab(bdendo$hyp,bdendo$d)
epitab(bdendo$hyp,bdendo$d,method = "oddsratio")
vec <- sapply(
c("Smoking status", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = names(vec),
value = unname(vec)
)
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = names(vec),
value = unname(vec)
)
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = c("Smokers"),
value = unname(vec)
)
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = c("Smokers","lol"),
value = unname(vec)
)
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = names(vec),
value = unname(vec)
)
library("HSAUR")
library("MASS")
library(dplyr)
library(ggplot2)
library(patchwork)
library(epitools)
library(Epi)
data(bdendo)
bcg <- BCG
bcg <- bcg %>%
mutate(odds_tb = bcg$BCGTB/(bcg$BCGVacc - bcg$BCGTB)) %>%
mutate(odds_no_tb = bcg$NoVaccTB/(bcg$NoVacc-bcg$NoVaccTB)) %>%
mutate(odds_ratio = odds_tb/ odds_no_tb)
#calculates relative risk
bcg <- bcg %>%
mutate(risk_tb = bcg$BCGTB/bcg$BCGVacc) %>%
mutate(risk_no_tb = bcg$NoVaccTB/bcg$NoVacc) %>%
mutate(relative_risk = risk_tb/risk_no_tb)
justwork <- ggplot(data=bcg, aes(x=Year)) +
scale_color_manual(name = "Legend",
values = c("Relative Risk" = "blue",
"Odds Risk" = "red")) +
geom_point(aes(y=odds_ratio, color = "Relative Risk")) +
geom_point(aes(y=relative_risk, color = "Odds Risk")) +
ggtitle("Relative Risk vs Odds Ratio")
birth <-birthwt
View(birth)
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"ht")
birth <- birth %>%
mutate(ftv_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"ftv_yes")
birth <- birth %>%
mutate(age_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"age_yes")
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = names(vec),
value = unname(vec)
)
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = names(vec),
value = unname(vec)
)
cal_relative_risk <- function(df,col){
values <- df %>%
group_by_(col,"low") %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"ht")
birth <- birth %>%
mutate(ftv_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"ftv_yes")
birth <- birth %>%
mutate(age_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"age_yes")
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = names(vec),
value = unname(vec)
)
library("HSAUR")
library("MASS")
library(dplyr)
library(ggplot2)
library(patchwork)
library(epitools)
library(Epi)
data(bdendo)
bcg <- BCG
bcg <- bcg %>%
mutate(odds_tb = bcg$BCGTB/(bcg$BCGVacc - bcg$BCGTB)) %>%
mutate(odds_no_tb = bcg$NoVaccTB/(bcg$NoVacc-bcg$NoVaccTB)) %>%
mutate(odds_ratio = odds_tb/ odds_no_tb)
bcg <- bcg %>%
mutate(risk_tb = bcg$BCGTB/bcg$BCGVacc) %>%
mutate(risk_no_tb = bcg$NoVaccTB/bcg$NoVacc) %>%
mutate(relative_risk = risk_tb/risk_no_tb)
justwork <- ggplot(data=bcg, aes(x=Year)) +
scale_color_manual(name = "Legend",
values = c("Relative Risk" = "blue",
"Odds Risk" = "red")) +
geom_point(aes(y=odds_ratio, color = "Relative Risk")) +
geom_point(aes(y=relative_risk, color = "Odds Risk")) +
ggtitle("Relative Risk vs Odds Ratio")
birth <-birthwt
cal_relative_risk <- function(df,col){
values <- df %>%
group_by_(col,"low") %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"ht")
birth <- birth %>%
mutate(ftv_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"ftv_yes")
birth <- birth %>%
mutate(age_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"age_yes")
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = names(vec),
value = unname(vec)
)
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
Type = c("Smokers", "Hypertension", "Zero Prenatal Visits", "Birth Under 20"),
value = unname(vec)
)
View(rr)
View(rr)
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"),
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
Type = c("Smokers", "Hypertension", "Zero Prenatal Visits", "Birth Under 20"),
value = unname(vec)
)
#### creates new dataframe to make table
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"),
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
Type = c("Smokers status", "Hypertension status", "Zero Prenatal Visits", "Birth Under 20"),
value = unname(vec)
)
library("HSAUR")
library("MASS")
library(dplyr)
library(ggplot2)
library(patchwork)
library(epitools)
library(Epi)
data(bdendo)
bcg <- BCG
bcg <- bcg %>%
mutate(odds_tb = bcg$BCGTB/(bcg$BCGVacc - bcg$BCGTB)) %>%
mutate(odds_no_tb = bcg$NoVaccTB/(bcg$NoVacc-bcg$NoVaccTB)) %>%
mutate(odds_ratio = odds_tb/ odds_no_tb)
bcg <- bcg %>%
mutate(risk_tb = bcg$BCGTB/bcg$BCGVacc) %>%
mutate(risk_no_tb = bcg$NoVaccTB/bcg$NoVacc) %>%
mutate(relative_risk = risk_tb/risk_no_tb)
#make scatterplot
justwork <- ggplot(data=bcg, aes(x=Year)) +
scale_color_manual(name = "Legend",
values = c("Relative Risk" = "blue",
"Odds Risk" = "red")) +
geom_point(aes(y=odds_ratio, color = "Relative Risk")) +
geom_point(aes(y=relative_risk, color = "Odds Risk")) +
ggtitle("Relative Risk vs Odds Ratio")
birth <-birthwt
cal_relative_risk <- function(df,col){
values <- df %>%
group_by_(col,"low") %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"ht")
birth <- birth %>%
mutate(ftv_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"ftv_yes")
birth <- birth %>%
mutate(age_yes = as.numeric(age <20))
cal_relative_risk(birth,"age_yes")
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"),
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
Type = c("Smokers status", "Hypertension status", "Zero Prenatal Visits", "Birth Under 20"),
value = unname(vec)
)
View(rr)
View(rr)
epitab(bdendo$hyp,bdendo$d,method = "oddsratio")
View(bdendo)
View(bdendo)
epitab(bdendo$gall,bdendo$d,method = "oddsratio")
epitab(bdendo$ob,bdendo$d,method = "oddsratio")
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"ht")
birth <- birth %>%
mutate(ftv_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"ftv_yes")
birth <- birth %>%
mutate(age_yes = as.numeric(age <20))
cal_relative_risk(birth,"age_yes")
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"),
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
Type = c("Smokers status", "Hypertension status", "Zero Prenatal Visits", "Birth Under 20"),
value = unname(vec)
)
shiny::runApp('Desktop/Info478/health-informatics/cancer-ethnicity')
runApp('Desktop/Info478/health-informatics/cancer-ethnicity')
runApp('Desktop/Info478/health-informatics/cancer-ethnicity')
runApp('Desktop/Info478/health-informatics/cancer-ethnicity')
runApp('Desktop/Info478/health-informatics/cancer-ethnicity')
shiny::runApp('Desktop/Info478/health-informatics/final')
install.packages("usmap")
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
library(rsconnect)
library(rsconnect)
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
showLogs()
source('~/Desktop/Info478/health-informatics/scripts/map.R')
runApp('Desktop/Info478/health-informatics/final')
rsconnect::(consoleLogs)
rsconnect::(consoleLogs)
rsconnect::(showLogs)
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
rsconnect::showLogs()
rsconnect::showLogs(roy-mosby)
rsconnect::showLogs("roy-mosby")
rsconnect::showLogs(https://roy-mosby.shinyapps.io/Washington-State-Cancer-Analysis/)
rsconnect::showLogs(https://roy-mosby.shinyapps.io/Washington-State-Cancer-Analysis)
rsconnect::showLogs(roy-mosby.shinyapps.io/Washington-State-Cancer-Analysis)
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/PoliceProject')
shiny::runApp('Desktop/PoliceProject')
shiny::runApp('Desktop/PoliceProject')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
crime_data <- read.csv("Crime_Datav2.csv")
crime_data <- read.csv("Crime_Datav2.csv")
setwd("~/Desktop/PoliceProject/seattle-crime")
crime_data <- read.csv("Crime_Datav2.csv")
data <-
crime_data %>%
mutate(Date.Occurred = as.Date(mdy_hm(crime_data$Report.DateTime))) %>%
select(-Report.DateTime) %>%
mutate(Year.Occurred = year(Date.Occurred)) %>%
mutate(Month.Occurred = paste0(month(Date.Occurred))) %>%
mutate(total_crime = 1)
unique(data$Offense)
