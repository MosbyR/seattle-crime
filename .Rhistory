)
cal_relative_risk <- function(df,col){
values <- df %>%
group_by_(col,"low") %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"ht")
birth <- birth %>%
mutate(ftv_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"ftv_yes")
birth <- birth %>%
mutate(age_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"age_yes")
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = names(vec),
value = unname(vec)
)
library("HSAUR")
library("MASS")
library(dplyr)
library(ggplot2)
library(patchwork)
library(epitools)
library(Epi)
data(bdendo)
bcg <- BCG
bcg <- bcg %>%
mutate(odds_tb = bcg$BCGTB/(bcg$BCGVacc - bcg$BCGTB)) %>%
mutate(odds_no_tb = bcg$NoVaccTB/(bcg$NoVacc-bcg$NoVaccTB)) %>%
mutate(odds_ratio = odds_tb/ odds_no_tb)
bcg <- bcg %>%
mutate(risk_tb = bcg$BCGTB/bcg$BCGVacc) %>%
mutate(risk_no_tb = bcg$NoVaccTB/bcg$NoVacc) %>%
mutate(relative_risk = risk_tb/risk_no_tb)
justwork <- ggplot(data=bcg, aes(x=Year)) +
scale_color_manual(name = "Legend",
values = c("Relative Risk" = "blue",
"Odds Risk" = "red")) +
geom_point(aes(y=odds_ratio, color = "Relative Risk")) +
geom_point(aes(y=relative_risk, color = "Odds Risk")) +
ggtitle("Relative Risk vs Odds Ratio")
birth <-birthwt
cal_relative_risk <- function(df,col){
values <- df %>%
group_by_(col,"low") %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"ht")
birth <- birth %>%
mutate(ftv_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"ftv_yes")
birth <- birth %>%
mutate(age_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"age_yes")
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
column = names(vec),
value = unname(vec)
)
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"), ## update names?
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
Type = c("Smokers", "Hypertension", "Zero Prenatal Visits", "Birth Under 20"),
value = unname(vec)
)
View(rr)
View(rr)
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"),
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
Type = c("Smokers", "Hypertension", "Zero Prenatal Visits", "Birth Under 20"),
value = unname(vec)
)
#### creates new dataframe to make table
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"),
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
Type = c("Smokers status", "Hypertension status", "Zero Prenatal Visits", "Birth Under 20"),
value = unname(vec)
)
library("HSAUR")
library("MASS")
library(dplyr)
library(ggplot2)
library(patchwork)
library(epitools)
library(Epi)
data(bdendo)
bcg <- BCG
bcg <- bcg %>%
mutate(odds_tb = bcg$BCGTB/(bcg$BCGVacc - bcg$BCGTB)) %>%
mutate(odds_no_tb = bcg$NoVaccTB/(bcg$NoVacc-bcg$NoVaccTB)) %>%
mutate(odds_ratio = odds_tb/ odds_no_tb)
bcg <- bcg %>%
mutate(risk_tb = bcg$BCGTB/bcg$BCGVacc) %>%
mutate(risk_no_tb = bcg$NoVaccTB/bcg$NoVacc) %>%
mutate(relative_risk = risk_tb/risk_no_tb)
#make scatterplot
justwork <- ggplot(data=bcg, aes(x=Year)) +
scale_color_manual(name = "Legend",
values = c("Relative Risk" = "blue",
"Odds Risk" = "red")) +
geom_point(aes(y=odds_ratio, color = "Relative Risk")) +
geom_point(aes(y=relative_risk, color = "Odds Risk")) +
ggtitle("Relative Risk vs Odds Ratio")
birth <-birthwt
cal_relative_risk <- function(df,col){
values <- df %>%
group_by_(col,"low") %>%
count()
risk1 <- values$n[2]/values$n[1]
risk2 <- values$n[4]/ values$n[3]
relative_risk <- (risk1/risk2)
return(relative_risk)
}
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"ht")
birth <- birth %>%
mutate(ftv_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"ftv_yes")
birth <- birth %>%
mutate(age_yes = as.numeric(age <20))
cal_relative_risk(birth,"age_yes")
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"),
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
Type = c("Smokers status", "Hypertension status", "Zero Prenatal Visits", "Birth Under 20"),
value = unname(vec)
)
View(rr)
View(rr)
epitab(bdendo$hyp,bdendo$d,method = "oddsratio")
View(bdendo)
View(bdendo)
epitab(bdendo$gall,bdendo$d,method = "oddsratio")
epitab(bdendo$ob,bdendo$d,method = "oddsratio")
cal_relative_risk(birth,"smoke")
cal_relative_risk(birth,"ht")
birth <- birth %>%
mutate(ftv_yes = as.numeric(ftv == 0))
cal_relative_risk(birth,"ftv_yes")
birth <- birth %>%
mutate(age_yes = as.numeric(age <20))
cal_relative_risk(birth,"age_yes")
vec <- sapply(
c("smoke", "ht", "ftv_yes", "age_yes"),
function(x) cal_relative_risk(birth, x)
)
rr <- data.frame(
Type = c("Smokers status", "Hypertension status", "Zero Prenatal Visits", "Birth Under 20"),
value = unname(vec)
)
shiny::runApp('Desktop/Info478/health-informatics/cancer-ethnicity')
runApp('Desktop/Info478/health-informatics/cancer-ethnicity')
runApp('Desktop/Info478/health-informatics/cancer-ethnicity')
runApp('Desktop/Info478/health-informatics/cancer-ethnicity')
runApp('Desktop/Info478/health-informatics/cancer-ethnicity')
shiny::runApp('Desktop/Info478/health-informatics/final')
install.packages("usmap")
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
library(rsconnect)
library(rsconnect)
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
showLogs()
source('~/Desktop/Info478/health-informatics/scripts/map.R')
runApp('Desktop/Info478/health-informatics/final')
rsconnect::(consoleLogs)
rsconnect::(consoleLogs)
rsconnect::(showLogs)
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
rsconnect::showLogs()
rsconnect::showLogs(roy-mosby)
rsconnect::showLogs("roy-mosby")
rsconnect::showLogs(https://roy-mosby.shinyapps.io/Washington-State-Cancer-Analysis/)
rsconnect::showLogs(https://roy-mosby.shinyapps.io/Washington-State-Cancer-Analysis)
rsconnect::showLogs(roy-mosby.shinyapps.io/Washington-State-Cancer-Analysis)
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/Info478/health-informatics/final')
runApp('Desktop/Info478/health-informatics/final')
shiny::runApp('Desktop/PoliceProject')
shiny::runApp('Desktop/PoliceProject')
shiny::runApp('Desktop/PoliceProject')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
runApp('Desktop/PoliceProject/seattle-crime')
runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
runApp('Desktop/PoliceProject/seattle-crime')
runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
shiny::runApp('Desktop/PoliceProject/seattle-crime')
fig <- plot_ly(y = list(1,2,3,4,5), type = "box", quartilemethod="exclusive")
fig
shiny::runApp('Desktop/PoliceProject/seattle-crime')
runApp('Desktop/PoliceProject/seattle-crime')
import plotly.express as px
crime_data <- read.csv("Crime_Datav2.csv")
setwd("~/Desktop/PoliceProject/seattle-crime")
crime_data <- read.csv("Crime_Datav2.csv")
data <-
crime_data %>%
mutate(Date.Occurred = as.Date(mdy_hm(crime_data$Report.DateTime))) %>%
select(-Report.DateTime) %>%
mutate(Year.Occurred = year(Date.Occurred)) %>%
mutate(Month.Occurred = paste0(month(Date.Occurred))) %>%
mutate(total_crime = 1)
#convert month.occured to string value
data$Month.Occurred <- as.numeric(as.factor(data$Month.Occurred))
filtered_data <-
data %>%
filter(Year.Occurred == '2008' | Year.Occurred == '2009' | Year.Occurred == '2010' | Year.Occurred == '2011' | Year.Occurred == '2012' | Year.Occurred == '2013'
| Year.Occurred == '2014' | Year.Occurred == '2015' | Year.Occurred == '2016' | Year.Occurred == '2017' | Year.Occurred == '2018' |  Year.Occurred == '2019') %>%
select(Offense.Parent.Group,Year.Occurred,MCPP,total_crime, Precinct,Month.Occurred,Crime.Against.Category,Latitude,Longitude)
p <- plot_ly(boxplotcrime, y=total_crime,
boxplots = "suspectedoutliers")
p <- plot_ly(filtered_data, y=total_crime,
boxplots = "suspectedoutliers")
View(filtered_data)
boxplotcrime <- filtered_data %>%
group_by(Offense.Parent.Group,Year.Occurred,Precinct) %>%
summarise(total_crime =sum(total_crime)) %>%
filter(Offense.Parent.Group == input$crime) %>%
filter(Precinct != "UNKNOWN", Precinct!= "")
boxplotcrime <- filtered_data %>%
group_by(Offense.Parent.Group,Year.Occurred,Precinct) %>%
summarise(total_crime =sum(total_crime)) %>%
filter(Offense.Parent.Group == DUI) %>%
filter(Precinct != "UNKNOWN", Precinct!= "")
boxplotcrime <- filtered_data %>%
group_by(Offense.Parent.Group,Year.Occurred,Precinct) %>%
summarise(total_crime =sum(total_crime)) %>%
filter(Offense.Parent.Group == "DUI") %>%
filter(Precinct != "UNKNOWN", Precinct!= "")
View(boxplotcrime)
boxplotcrime <- filtered_data %>%
group_by(Offense.Parent.Group,Year.Occurred,Precinct) %>%
summarise(total_crime =sum(total_crime)) %>%
filter(Offense.Parent.Group == "ROBBERY") %>%
filter(Precinct != "UNKNOWN", Precinct!= "")
View(boxplotcrime)
boxplotcrime <- filtered_data %>%
group_by(Offense.Parent.Group,Year.Occurred,Precinct) %>%
summarise(total_crime =sum(total_crime)) %>%
filter(Offense.Parent.Group == "ROBBERY") %>%
filter(Year.Occurred == 2015) %>%
filter(Precinct != "UNKNOWN", Precinct!= "")
View(boxplotcrime)
p <- plot_ly(boxplotcrime, y=total_crime,
boxplots = "suspectedoutliers")
p <- plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers")
plotly(p)
subplot(p)
p1 <- p %>% add_boxplot(x = "Precinct")
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p1,p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
View(boxplotcrime)
boxplotcrime <- filtered_data %>%
group_by(Offense.Parent.Group,Year.Occurred,Precinct) %>%
summarise(total_crime =sum(total_crime)) %>%
filter(Offense.Parent.Group == "ROBBERY") %>%
filter(Precinct != "UNKNOWN", Precinct!= "")
p <- plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers")
p1 <- p %>% add_boxplot(x = "Precinct")
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p1,p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
subplot(
p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
p <- plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers")
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
p1 <- p %>% add_boxplot(x = "Precinct")
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p1,p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
subplot(
p1,p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
)
subplot(
p1,p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
subplot(
p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
subplot(
p2 shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
subplot(
p1 shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
subplot(
p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
subplot(
p1, p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
p <- plot_ly(boxplotcrime, y=~total_crime,color=I("black"),
boxplots = "suspectedoutliers")
p1 <- p %>% add_boxplot(x = "Precinct")
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p1, p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
p1 <- p %>% add_boxplot(x = "")
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p1, p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
p1 <- p %>% add_boxplot()
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p1, p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
p1 <- p %>% add_boxplot(x = "")
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p1, p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
p <- plot_ly(boxplotcrime, y=~total_crime,color="Precinct"),
boxplots = "suspectedoutliers")
p <- plot_ly(boxplotcrime, y=~total_crime,color="blue"),
boxplots = "suspectedoutliers")
p <- plot_ly(boxplotcrime, y=~total_crime,color=I("blue"),
boxplots = "suspectedoutliers")
p1 <- p %>% add_boxplot(x = "")
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p1, p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
p <- plot_ly(boxplotcrime, y=~total_crime,color=I("blue","red"),
boxplots = "suspectedoutliers")
p <- plot_ly(boxplotcrime, y=~total_crime,color=c("blue","red"),
boxplots = "suspectedoutliers")
p1 <- p %>% add_boxplot(x = "")
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p1, p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
p <- plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct)
p1 <- p %>% add_boxplot(x = "")
p2 <- p %>% add_boxplot(x = ~Precinct)
subplot(
p1, p2, shareY = TRUE,
widths= c(0.2,0.8), margin = 0
) %>% hide_legend()
p <- plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct)
plot(p)
plotly(p)
subplot(p)
p <- plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct)
runApp()
plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct)
runApp()
plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct)
boxplotcrime <- filtered_data %>%
group_by(Offense.Parent.Group,Year.Occurred,Precinct) %>%
summarise(total_crime =sum(total_crime)) %>%
filter(Offense.Parent.Group == "ROBBERY") %>%
filter(Precinct != "UNKNOWN", Precinct!= "") %>%
plot_ly(boxplotcrime, y=~total_crime,boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct)
subplot(p)
runApp()
runApp()
require(plotly)
boxplotcrime <- filtered_data %>%
group_by(Offense.Parent.Group,Year.Occurred,Precinct) %>%
summarise(total_crime =sum(total_crime)) %>%
filter(Offense.Parent.Group == "ROBBERY") %>%
filter(Precinct != "UNKNOWN", Precinct!= "") %>%
plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct)
plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct)
boxplotcrime <- filtered_data %>%
group_by(Offense.Parent.Group,Year.Occurred,Precinct) %>%
summarise(total_crime =sum(total_crime)) %>%
filter(Offense.Parent.Group == "ROBBERY") %>%
filter(Precinct != "UNKNOWN", Precinct!= "")
plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct)
runApp()
runApp()
plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct) %>%
layout(title = "H-1B Visas by Year",
xaxis = list(title = "Year"),
yaxis = list(title = "Count"))
runApp()
plot_ly(boxplotcrime, y=~total_crime,
boxplots = "suspectedoutliers") %>%
add_boxplot(color = ~Precinct) %>%
layout(title = "H-1B Visas by Year",
xaxis = list(title = "Year"),
yaxis = list(title = "Count")) %>%
layout(legend=list(title=list(text='<b> Trend </b>')))
runApp()
runApp()
runApp()
runApp()
